<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:oxm="http://www.springframework.org/schema/oxm" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop 
       	http://www.springframework.org/schema/aop/spring-aop.xsd
       	http://www.springframework.org/schema/tx
       	http://www.springframework.org/schema/tx/spring-tx.xsd
       	http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/oxm
        http://www.springframework.org/schema/oxm/spring-oxm.xsd
        http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd">

	<!--
	add org.aspectj:aspectjweaver:1.6.12 to make this work
	note that only beans which are created by Spring can be intercepted
	<bean id="timingAdvice" class="org.springframework.aop.interceptor.PerformanceMonitorInterceptor" />
	<aop:config>		
		<aop:advisor pointcut="execution(* org.appng.core.plugin.RequestProcessor.processApplication(..))" advice-ref="timingAdvice" />
		<aop:advisor pointcut="execution(* org.appng.core.plugin.MasterTransformer.transform(..))" advice-ref="timingAdvice" />		
		<aop:advisor pointcut="execution(* org.appng.core.plugin.StyleSheetProvider.getStyleSheet(..))" advice-ref="timingAdvice" />
	</aop:config>
	-->

	<context:component-scan base-package="org.appng.core" />
	<jpa:repositories base-package="org.appng.core.repository" entity-manager-factory-ref="entityManagerFactory"
		base-class="org.appng.persistence.repository.SearchRepositoryImpl" transaction-manager-ref="coreTxManager" />

	<tx:annotation-driven transaction-manager="coreTxManager" />

	<bean id="coreTxManager" class="org.springframework.orm.jpa.JpaTransactionManager" lazy-init="true">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<qualifier value="coreTxManager" />
	</bean>

	<bean id="dataSource" class="org.appng.core.repository.config.DataSourceFactory" destroy-method="destroy">
		<constructor-arg type="org.appng.core.repository.config.DatasourceConfigurer">
			<bean class="org.appng.core.repository.config.HikariCPConfigurer">
				<constructor-arg type="org.appng.core.domain.DatabaseConnection">
					<bean class="org.appng.core.domain.DatabaseConnection">
						<property name="driverClass" value="${hibernate.connection.driver_class}" />
						<property name="jdbcUrl" value="${hibernate.connection.url}" />
						<property name="userName" value="${hibernate.connection.username}" />
						<property name="password" value="${hibernate.connection.password}" />
						<property name="validationQuery" value="${database.validationQuery}" />
						<property name="validationPeriod" value="${database.validationPeriod}" />
						<property name="type" value="${database.type}" />
						<property name="name" value="${database.name:appNG Root Connection}" />
						<property name="minConnections" value="${database.minConnections:3}" />
						<property name="maxConnections" value="${database.maxConnections:10}" />
					</bean>
				</constructor-arg>
				<constructor-arg value="${database.logPerformance:false}" />
			</bean>
		</constructor-arg>
	</bean>

	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		lazy-init="true">
		<property name="persistenceUnitName" value="appNG"/>
		<property name="persistenceProviderClass" value="org.hibernate.jpa.HibernatePersistenceProvider" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.id.new_generator_mappings">false</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>org.appng.core.domain</value>
			</list>
		</property>
	</bean>

	<bean id="entityManager" class="org.springframework.orm.jpa.support.SharedEntityManagerBean" lazy-init="true">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="requestProcessor" class="org.appng.core.model.PlatformProcessor" scope="request">
		<property name="marshallService" ref="marshallService" />
		<property name="platformTransformer" ref="platformTransformer" />
	</bean>

	<bean id="thymeleafProcessor" class="org.appng.core.model.ThymeleafProcessor" scope="request">
		<property name="marshallService" ref="marshallService" />
	</bean>

	<bean id="tagletProcessor" class="org.appng.taglib.TagletProcessor" scope="request">
		<property name="marshallService" ref="marshallService" />
		<property name="styleSheetProvider" ref="styleSheetProvider" />
	</bean>

	<bean id="platformTransformer" class="org.appng.core.model.PlatformTransformer" scope="request">
		<property name="styleSheetProvider" ref="styleSheetProvider" />
	</bean>

	<bean id="marshallService" class="org.appng.xml.MarshallService" init-method="init" scope="prototype">
		<property name="documentBuilderFactory" ref="documentBuilderFactory" />
		<property name="transformerFactory" ref="transformerFactory" />
		<property name="useSchema" value="false" />
		<property name="schema">
			<util:constant static-field="org.appng.xml.MarshallService.AppNGSchema.PLATFORM" />
		</property>
		<property name="prettyPrint" value="true" />
		<property name="schemaLocation" value="http://www.appng.org/schema/platform/appng-platform.xsd" />
		<property name="cdataElements">
			<list>
				<value>title</value>
				<value>description</value>
				<value>label</value>
				<value>value</value>
				<value>message</value>
			</list>
		</property>
	</bean>

	<bean id="documentBuilderFactory" class="javax.xml.parsers.DocumentBuilderFactory" factory-method="newInstance">
		<property name="namespaceAware" value="true" />
	</bean>

	<bean id="transformerFactory" class="javax.xml.transform.TransformerFactory" factory-method="newInstance" />

	<bean id="styleSheetProvider" class="org.appng.xml.transformation.StyleSheetProvider" init-method="init" scope="request">
		<property name="documentBuilderFactory" ref="documentBuilderFactory" />
		<property name="transformerFactory" ref="transformerFactory" />
	</bean>

	<bean id="environment" class="org.appng.api.support.environment.EnvironmentFactoryBean" scope="request" />

	<bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean" />
	<bean id="databaseService" class="org.appng.core.service.DatabaseService" lazy-init="true" />
	<bean id="ldapService" class="org.appng.core.service.LdapService" lazy-init="true" />
	<bean id="coreService" class="org.appng.core.service.CoreService" lazy-init="true" />
	<bean id="initializerService" class="org.appng.core.service.InitializerService" lazy-init="true" />

	<bean id="templateService" class="org.appng.core.service.TemplateService" lazy-init="true" />

</beans>
