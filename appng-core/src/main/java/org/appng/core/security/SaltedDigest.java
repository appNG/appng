/*
 * Copyright 2011-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.appng.core.security;

/**
 * Provides methods required to create a salted hash of a given secret. Different implementations may provide stronger
 * or weaker algorithms as well as better or poorer performance.
 * 
 * @author Matthias Herlitzius
 * 
 */
public interface SaltedDigest {

	/**
	 * Returns a salted hash of the submitted secret.
	 * 
	 * @param secret
	 *            The cleartext secret.
	 * @param salt
	 *            The salt which should have been generated by the {@link SaltedDigest#getSalt()} method of the
	 *            respective implementation.
	 * @return The salted hash (digest).
	 */
	String getDigest(String secret, String salt);

	/**
	 * Generates a random salt. Can be used together with the {@link SaltedDigest#getDigest(String, String)} method of
	 * the respective implementation.
	 * 
	 * @return the random salt
	 */
	String getSalt();

}
