{
  "appNG" : {
    "name" : "appNG",
    "properties" : {
      "applicationDir" : {
        "value" : "/applications",
        "defaultValue" : "/applications",
        "description" : "The folder used for installing file-based-applications, relative to the webapp-root"
      },
      "appngData" : {
        "value" : "/appNG/webapps/ROOT",
        "defaultValue" : "/appNG/webapps/ROOT",
        "description" : "The data directory for appNG"
      },
      "cacheApplicationFolder" : {
        "value" : "application",
        "defaultValue" : "application",
        "description" : "The folder for the application-cache, relative to platform.cacheFolder. Applications might use this folder to cache temporary data."
      },
      "cacheFolder" : {
        "value" : "cache",
        "defaultValue" : "cache",
        "description" : "The cache folder, relative to WEB-INF. Contains the platform.cacheFolder and the platform.cacheApplicationFolder."
      },
      "cacheImageFolder" : {
        "value" : "image",
        "defaultValue" : "image",
        "description" : "The folder used for caching images, within the application-cache"
      },
      "cachePlatformFolder" : {
        "value" : "platform",
        "defaultValue" : "platform",
        "description" : "The folder for the platform-cache, relative to platform.cacheFolder. The platform cache is used by appNG to cache application resources."
      },
      "cleanTempFolderOnStartup" : {
        "value" : "false",
        "defaultValue" : "false",
        "description" : "If set to true, the temp folder (defined by the system property java.io.tmpdir) is cleaned on a platform startup. WARNING: Only set to true if appNG was started with a custom value (e.g. -Djava.io.tmpdir=/appng-temp)."
      },
      "csrfFilterEnabled" : {
        "value" : "false",
        "defaultValue" : "false",
        "description" : "Set to true to enable a filter preventing CSRF-attacks"
      },
      "databasePrefix" : {
        "value" : "",
        "description" : "The prefix to use when generating database names",
        "clob" : true
      },
      "databaseValidationPeriod" : {
        "value" : "15",
        "defaultValue" : "15",
        "description" : "The idle database connection test period in minutes. If a database connection remains idle for the specified time, the validation query defined in the database connection will be sent to prevent a database connection timeout."
      },
      "defaultTemplate" : {
        "value" : "appng",
        "defaultValue" : "appng",
        "description" : "The name of the default template to use (must be a folder located under platform.templateFolder)"
      },
      "devMode" : {
        "value" : "true",
        "defaultValue" : "false",
        "description" : "Disable for production use. If enabled, XML and XSL resources will be written to the cache directory. If disabled, XML and XSL resources will be cached in memory."
      },
      "ehcacheConfig" : {
        "value" : "WEB-INF/conf/ehcache.xml",
        "defaultValue" : "WEB-INF/conf/ehcache.xml",
        "description" : "The global page cache configuration using the Ehcache XML configuration format. This cache is used to cache HTTP responses."
      },
      "encoding" : {
        "value" : "UTF-8",
        "defaultValue" : "UTF-8",
        "description" : "The charset/encoding used for http-responses."
      },
      "filebasedDeployment" : {
        "value" : "true",
        "defaultValue" : "true",
        "description" : "Set to 'true' if applications should be deployed to the local filesystem, 'false' otherwise."
      },
      "formatOutput" : {
        "value" : "false",
        "defaultValue" : "false",
        "description" : "Disable for production use. If enabled, debugging is easier, but Textarea values are formatted wrong."
      },
      "imageMagickPath" : {
        "value" : "/usr/bin",
        "defaultValue" : "/usr/bin",
        "description" : "The path to the ImageMagick executable"
      },
      "jspFileType" : {
        "value" : "jsp",
        "defaultValue" : "jsp",
        "description" : "The file-extension for JSP-files."
      },
      "locale" : {
        "value" : "en",
        "defaultValue" : "en",
        "description" : "The default locale for the site. Use one of java.util.Locale.getAvailableLocales()"
      },
      "logfile" : {
        "value" : "appNG.log",
        "defaultValue" : "appNG.log",
        "description" : "The name of the logfile generated by appNG"
      },
      "mailDisabled" : {
        "value" : "true",
        "defaultValue" : "true",
        "description" : "Set to 'true' to disable mailing and log the e-mails instead."
      },
      "mailHost" : {
        "value" : "localhost",
        "defaultValue" : "localhost",
        "description" : "The mail-host to use."
      },
      "mailPort" : {
        "value" : "25",
        "defaultValue" : "25",
        "description" : "The mail-port to use"
      },
      "manageDatabases" : {
        "value" : "true",
        "defaultValue" : "true",
        "description" : "If set to 'true', appNG will manage the databases (create schemas and users) required by the applications."
      },
      "maxUploadSize" : {
        "value" : "31457280",
        "defaultValue" : "31457280",
        "description" : "The maximum size for file uploads in bytes"
      },
      "mdcEnabled" : {
        "value" : "true",
        "defaultValue" : "true",
        "description" : "Set to 'true' to enable support for Mapped Diagnostic Context (MDC) Logging."
      },
      "messagingEnabled" : {
        "value" : "false",
        "defaultValue" : "false",
        "description" : "Set to true to enable cluster messaging"
      },
      "messagingGroupAddress" : {
        "value" : "224.2.2.4",
        "defaultValue" : "224.2.2.4",
        "description" : "The multicast address used for messaging"
      },
      "messagingGroupPort" : {
        "value" : "4000",
        "defaultValue" : "4000",
        "description" : "The port used for multicast messaging"
      },
      "messagingReceiver" : {
        "value" : "org.appng.core.controller.messaging.MulticastReceiver",
        "defaultValue" : "org.appng.core.controller.messaging.MulticastReceiver",
        "description" : "Define messaging implementation by referring class name. Default method is multicast "
      },
      "monitorPerformance" : {
        "value" : "false",
        "defaultValue" : "false",
        "description" : "Set to true to enable performance monitoring for the target XML"
      },
      "passwordPolicyErrorMessageKey" : {
        "value" : "DefaultPasswordPolicy.errorMessage",
        "defaultValue" : "DefaultPasswordPolicy.errorMessage",
        "description" : "The resource-bundle key (for messages-core) for the message which is being displayed when the password does not match the policy."
      },
      "passwordPolicyRegEx" : {
        "value" : "[\\S]{6,64}",
        "defaultValue" : "[\\S]{6,64}",
        "description" : "A regular expression describing the password-policy"
      },
      "platformRootPath" : {
        "value" : "/appNG/webapps/ROOT",
        "defaultValue" : "/appNG/webapps/ROOT",
        "description" : "The absolute root-path of the platform"
      },
      "repositoryCert" : {
        "value" : "",
        "description" : "The certificate to use when verifying a signed remote repository (PEM format)",
        "clob" : true
      },
      "repositoryDefaultDigest" : {
        "value" : "",
        "defaultValue" : "",
        "description" : "The default digest for a published local application repository"
      },
      "repositoryPath" : {
        "value" : "repository",
        "defaultValue" : "repository",
        "description" : "The folder used for the repositories of the site, relative to the webapp-root"
      },
      "repositorySignature" : {
        "value" : "",
        "description" : "The private key to use when signing a local published repository (PEM format)",
        "clob" : true
      },
      "repositoryTrustStore" : {
        "value" : "",
        "defaultValue" : "",
        "description" : "The truststore used when verifying a signed remote repository, using file-protocol. If empty, the default $java.home/lib/security/cacerts is being used."
      },
      "repositoryTrustStorePassword" : {
        "value" : "",
        "defaultValue" : "",
        "description" : "The truststore's password"
      },
      "repositoryVerifySignature" : {
        "value" : "true",
        "defaultValue" : "true",
        "description" : "When set to 'true', signed remote repositories are validated against the configured (or default) truststore."
      },
      "sessionTimeout" : {
        "value" : "1800",
        "defaultValue" : "1800",
        "description" : "The timeout for a user session in seconds"
      },
      "sharedSecret" : {
        "value" : "TheSecret",
        "defaultValue" : "TheSecret",
        "description" : "The shared secret used for digest authentication"
      },
      "templateFolder" : {
        "value" : "/templates",
        "defaultValue" : "/templates",
        "description" : "The folder used for templates, relative to the webapp-root"
      },
      "templatePrefix" : {
        "value" : "/template",
        "defaultValue" : "/template",
        "description" : "The path under which the resources of the active template are beeing served."
      },
      "timeZone" : {
        "value" : "Europe/Berlin",
        "defaultValue" : "Europe/Berlin",
        "description" : "The default timezone for the site. Use one of java.util.TimeZone.getAvailableIDs()."
      },
      "uploadDir" : {
        "value" : "/uploads",
        "defaultValue" : "/uploads",
        "description" : "The folder for saving uploads, relative to the webapp-root"
      },
      "vHostMode" : {
        "value" : "NAME_BASED",
        "defaultValue" : "NAME_BASED",
        "description" : "Defines whether the server is identified by its IP ('IP_BASED') or by its name ('NAME_BASED')"
      },
      "writeDebugFiles" : {
        "value" : "false",
        "defaultValue" : "false",
        "description" : "When set to 'true', the XML, XSLT and potential Exceptions occurring on a request to the appNG manager GUI are written to <platformRootPath>/debug"
      },
      "xssAllowedTags" : {
        "value" : "a href class style|div align style",
        "defaultValue" : "a href class style|div align style",
        "description" : "A list of additionally allowed HTML Tags, separated by '|', optionally followed by a space-separated list of allowed attributes. Example: h1|h2|a href class style|div align style"
      },
      "xssProtect" : {
        "value" : "false",
        "defaultValue" : "false",
        "description" : "Set to 'true' to enable XSS protection"
      }
    }
  }
}